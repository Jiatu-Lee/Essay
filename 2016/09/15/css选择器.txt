1. 元素选择器：
选择器通常将是某个 HTML 元素，比如 p、h1、em、a，甚至可以是 html 本身。在 W3C 标准中，元素选择器又称为类型选择器。
类型选择器匹配文档语言元素类型的名称。类型选择器匹配文档树中该元素类型的每一个实例，因此，我们也可以为 XML 文档中的元素设置样式：
需要在xml文件中写上<?xml-stylesheet type="text/css" href="*.css"?>

2. 选择器分组
用逗号将元素选择器隔开，逗号告诉浏览器，规则中包含两个不同的选择器。

3. 通配符选择器
显示为一个星号（*）。该选择器可以与任何元素匹配，就像是一个通配符。

4. 声明分组
我们既可以对选择器进行分组，也可以对声明分组。不过这种写法效率不高，所以不建议使用。

5. 类选择器
为了将类选择器的样式与元素关联，必须将 class 指定为一个适当的值。类选择器可以结合元素选择器来使用。
在 HTML 中，一个 class 值中可能包含一个词列表，各个词之间用空格分隔，这称为多类选择器。
通过把两个类选择器链接在一起，仅可以选择同时包含这些类名的元素（类名的顺序不限）。
如果一个多类选择器包含类名列表中没有的一个类名，匹配就会失败。

.集合A {}
<标签名 class="集合B"></标签名>
集合A是集合B的一个非空子集。

6. id 选择器
在一个 HTML 文档中，id 选择器会使用一次，而且仅一次。id 选择器不能结合使用，因为 id 属性不允许有以空格分隔的词列表。

7. 属性选择器
[attribute] 用于选取带有指定属性的元素。 
[attribute=value] 用于选取带有指定属性和值的元素。 
[attribute~=value] 用于选取属性值中包含指定词汇的元素。 
[attribute|=value] 用于选取带有以指定值开头的属性值的元素，该值必须是整个单词。 
[attribute^=value] 匹配属性值以指定值开头的每个元素。 
[attribute$=value] 匹配属性值以指定值结尾的每个元素。 
[attribute*=value] 匹配属性值中包含指定值的每个元素。 

8. 后代选择器
又称为包含选择器。
在后代选择器中，规则左边的选择器一端包括两个或多个用空格分隔的选择器。选择器之间的空格是一种结合符（combinator）。
每个空格结合符可以解释为“... 在 ... 找到”、“... 作为 ... 的一部分”、“... 作为 ... 的后代”，但是要求必须从右向左读选择器。
因此，h1 em 选择器可以解释为 “作为 h1 元素后代的任何 em 元素”。如果要从左向右读选择器，可以换成以下说法：“包含 em 的所有 h1 会把以下样式应用到该 em”。
两个元素之间的层次间隔可以是无限的。如果写作 ul em，这个语法就会选择从 ul 元素继承的所有 em 元素，而不论 em 的嵌套层次多深。

9. 子元素选择器
子选择器使用了大于号（子结合符）。子结合符两边可以有空白符，这是可选的。
如果从右向左读，选择器 h1 > strong 可以解释为“选择作为 h1 元素子元素的所有 strong 元素”。

10.相邻兄弟选择器
相邻兄弟选择器使用了加号（+），即相邻兄弟结合符。与子结合符一样，相邻兄弟结合符旁边可以有空白符。
用一个结合符只能选择两个相邻兄弟中的第二个元素。

11. 伪类
:active 向被激活的元素添加样式。
:focus 向拥有键盘输入焦点的元素添加样式。
:hover 当鼠标悬浮在元素上方时，向元素添加样式。
:link 向未被访问的链接添加样式。
:visited 向已被访问的链接添加样式。
:first-child 向元素的第一个子元素添加样式。
:lang 向带有指定 lang 属性的元素添加样式。 

12. 伪元素
:first-letter 向文本的第一个字母添加特殊样式。
:first-line 向文本的首行添加特殊样式。
:before 在元素之前添加内容。
:after 在元素之后添加内容。

一个良好的习惯是	属性名：属性值 ;

不要在属性值与单位之间留有空格,它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。

类选择器和 id 选择器可能是区分大小写的。